generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      =  env("DATABASE_URL")
}


enum Status {
  ACTIVE
  INACTIVE
  DETAILS_SUBMISSION_INCOMPLETE
  DETAILS_SUBMISSION_COMPLETED
  REJECTED
}

model User {
  id                  Int             @id @default(autoincrement())
  email               String          @unique
  password            String
  role                Int
}


model Vendor {
  id                  Int             @unique
  profilePicture      String?
  firstName           String
  lastName            String
  phoneNumber         String
  countryCode         Int?
  businessAdminId     Int
  status              Status          @default(ACTIVE)
  createdAt           DateTime        @default(now())
  updatedAt           DateTime?       @updatedAt
  business            Business?       @relation("VendorBusiness")
}


model Business {
  id                  Int                  @id @default(autoincrement())
  address             Address?             @relation("BusinessAddress", fields: [addressId], references: [id])
  addressId           Int?             
  vendor              Vendor               @relation("VendorBusiness", fields: [vendorId], references: [id])
  vendorId            Int                  @unique
  businessName        String?
  countryCode         Int?
  phoneNumber         String?
  email               String?
  generalDetail       String?
  dateOfEstablishment DateTime?            @db.Date
  areaDescription     String?
  vendorBusinessType  String?      
  insured             Boolean?
  licensed            Boolean?
  grossAnnualSale     Int?
  currency            String?
  bankName            String?
  beneficiaryName     String?
  accountNumber       String?
  businessRegCert     String?
  identityProof       String?
  addressProof        String?
  formStep            Int
  createdAt           DateTime             @default(now())
  updatedAt           DateTime?            @updatedAt
}


model Address {
  id              Int           @id @default(autoincrement())
  landmark        String
  street          String
  city            String
  state           String
  zipCode         String
  country         String
  latitude        Float?       
  longitude       Float?
  createdAt       DateTime      @default(now())
  updatedAt       DateTime?     @updatedAt
  business        Business[]    @relation("BusinessAddress")
}


model BusinessCategory {
  categoryId       Int               @id @default(autoincrement())
  name             String
  description      String
  status           Status            @default(ACTIVE)
  createdAt        DateTime          @default(now())
  updatedAt        DateTime?         @updatedAt
}